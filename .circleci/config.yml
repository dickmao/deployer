version: 2
references:
  # sepp2k no way for array to contain anchor steps and additional steps

  jobs-gamut: &jobs-gamut
    jobs:
      - build-deployer-image
      - build-ecscli
      - ecs-up:
          requires:
            - build-deployer-image
            - build-ecscli
      - ecs-compose-up:
          requires:
            - ecs-up
      - stop-dedupe:
          requires:
            - ecs-compose-up
      - stop-play:
          requires:
            - ecs-compose-up
      - spider-newyork:
          requires:
            - stop-dedupe
            - stop-play
      - spider-listingsproject:
          requires:
            - stop-dedupe
            - stop-play
      - dedupe:
          requires:
            - spider-newyork
            - spider-listingsproject
      - success-function:
          requires:
            - dedupe
      - ecs-compose-down:
          requires:
            - success-function
      - ecs-down:
          requires:
            - ecs-compose-down


jobs:
  build-deployer-image:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:patient0
        user:
          root # circleci cannot seem to get /var/run/docker.sock
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: false

      - run: |
          set -ex
          eval `aws ecr get-login --no-include-email --region $AWS_REGION`
          docker build -t circleci:deployer .circleci/images
          docker tag circleci:deployer 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
          docker push 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer

  build-ecscli:
    docker:
      - image: circleci/golang:1.9.2
    steps:
      - run: |
          set -ex
          # Thanks @bobziuchkovski
          git config --global url."https://${GIT_PASSWORD}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          mkdir -p /go/src/github.com/aws
          (cd /go/src/github.com/aws ; git clone -b my-branch https://github.com/dickmao/amazon-ecs-cli.git)
          # shlomi noach, code.openark.org
          (cd /go/src/github.com/aws/amazon-ecs-cli ; go get ./... && make)
      - save_cache:
          key: ecscli-{{ checksum "/go/src/github.com/aws/amazon-ecs-cli/.git/index" }}
          paths: 
            - /go/src/github.com/aws/amazon-ecs-cli

  ecs-up:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          keys: ecscli
      - run: |
          set -ex
          ./ecs-up.sh
      - persist_to_workspace:
          root: ecs-state
          paths:
            - "*"
  ecs-compose-up:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          keys: ecscli
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          ./ecs-compose-up.sh
      - persist_to_workspace:
          root: ecs-state
          paths:
            - "*"

  stop-dedupe:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          keys: ecscli
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          ./ecs-compose-down.sh -s dedupe

  stop-play:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          keys: ecscli
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          ./ecs-compose-down.sh -s play

  spider-newyork:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
    steps:
      - checkout
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          source ./bash_aliases.sh
          docke-ecs scrapyd-crawl schedule newyork
  
  spider-listingsproject: 
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
    steps:
      - checkout
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          source ./bash_aliases.sh
          docke-ecs scrapyd-crawl schedule listingsproject

  dedupe:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          source bash_aliases.sh
          ssh-ecs 0 docker run --rm 303634175659.dkr.ecr.us-east-2.amazonaws.com/dedupe:latest ./dedupe-on-demand.sh 1

  success-function:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          source ./bash_aliases.sh
          ssh-ecs 0 docker run --rm 303634175659.dkr.ecr.us-east-2.amazonaws.com/success-function:0.1-SNAPSHOT bin/success-function

  ecs-compose-down:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          keys: ecscli
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          ./ecs-compose-down.sh
      - persist_to_workspace:
          root: ecs-state
          paths:
            - "*"

  ecs-down:
    docker:
      - image: 303634175659.dkr.ecr.us-east-2.amazonaws.com/circleci:deployer
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - attach_workspace:
          at: ecs-state
      - run: |
          set -ex
          ./ecs-down.sh
      - persist_to_workspace:
          root: ecs-state
          paths:
            - "*"

workflows:
  version: 2
  commit:
    <<: *jobs-gamut
  scheduled-workflow:
    triggers:
      - schedule:
          cron: "30 13 * * *"
          filters:
            branches:
              only: master
    <<: *jobs-gamut
