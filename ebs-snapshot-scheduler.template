{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(SO0007) - EBS Snapshot Scheduler: This template installs a version of the EBS Snapshot Scheduler for automatically taking snapshots of EBS volumes.",
    "Parameters": {
        "DefaultSnapshotTime": {
            "Description": "Default Snapshot Time (UTC, 24-hour format)",
            "Type": "String",
            "Default": "2330"
        },
        "DefaultRetentionDays": {
            "Description": "Default Retention Period (number of days)",
            "Type": "String",
            "Default": "15"
        },
        "CustomTagName": {
            "Description": "Custom Tag Name",
            "Type": "String",
            "Default": "scheduler:ebs-snapshot"
        },
        "DefaultDaysActive": {
            "Description": "Enter 'all', 'weekdays', or any combination of days ('mon', 'tue', 'wed', 'thu', 'fri', 'sat', or 'sun') comma separated",
            "Type": "String",
            "Default": "all"
        },
        "DefaultTimeZone": {
            "Type": "String",
            "Default": "UTC",
            "AllowedValues": [
                "America/Los_Angeles",
                "America/New_York",
                "US/Eastern",
                "US/Pacific",
                "UTC"
            ],
            "Description": "Choose the default Time Zone. Default is 'UTC'"
        },
        "HistoryDDBTableName": {
            "Description": "History DynamoDB Table Name",
            "Type": "String",
            "Default": "Scheduler-EBS-Snapshot-History"
        },
        "PolicyDDBTableName": {
            "Description": "Policy DynamoDB Table Name",
            "Type": "String",
            "Default": "Scheduler-EBS-Snapshot-Policy"
        },
        "ReadCapacityUnits": {
            "ConstraintDescription": "should be between 5 and 10000",
            "Default": "1",
            "Description": "Provisioned read throughput",
            "MaxValue": "10000",
            "MinValue": "1",
            "Type": "Number"
        },
        "WriteCapacityUnits": {
            "ConstraintDescription": "should be between 5 and 10000",
            "Default": "1",
            "Description": "Provisioned write throughput",
            "MaxValue": "10000",
            "MinValue": "1",
            "Type": "Number"
        },
        "SendAnonymousData": {
            "Description": "Send anonymous data to AWS",
            "Type": "String",
            "Default": "No",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "AutoSnapshotDeletion": {
            "Description": "Enable auto-delete EBS snapshots after retention period.",
            "Type": "String",
            "Default": "Yes",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Tag Configuration"
                    },
                    "Parameters": [
                        "CustomTagName"
                    ]
                },
                {
                    "Label": {
                        "default": "Auto Delete Policy"
                    },
                    "Parameters": [
                        "AutoSnapshotDeletion"
                    ]
                },
                {
                    "Label": {
                        "default": "Default Value Configuration"
                    },
                    "Parameters": [
                        "DefaultSnapshotTime",
                        "DefaultRetentionDays",
                        "DefaultDaysActive",
                        "DefaultTimeZone"
                    ]
                },
                {
                    "Label": {
                        "default": "DynamoDB Configuration"
                    },
                    "Parameters": [
                        "PolicyDDBTableName",
                        "HistoryDDBTableName",
                        "ReadCapacityUnits",
                        "WriteCapacityUnits"
                    ]
                },
                {
                    "Label": {
                        "default": "Anonymous Metrics Request"
                    },
                    "Parameters": [
                        "SendAnonymousData"
                    ]
                }
            ]
        }
    },
    "Resources": {
        "ebsSnapSchedulerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ebaSnapSchedulerPermissions",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:dynamodb:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":table/",
                                                {
                                                    "Ref": "PolicyDDBTableName"
                                                }
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:Scan"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:dynamodb:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":table/",
                                                {
                                                    "Ref": "HistoryDDBTableName"
                                                }
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateSnapshot",
                                        "ec2:CreateTags",
                                        "ec2:DeleteSnapshot",
                                        "ec2:DescribeSnapshots",
                                        "ec2:DescribeTags",
                                        "ec2:DescribeRegions",
                                        "ec2:DescribeVolumes",
                                        "ec2:DescribeInstances",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:ListStacks"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ebsSnapShotLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "ebs-snapshot-scheduler.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "ebsSnapSchedulerRole",
                        "Arn"
                    ]
                },
                "Description": "EBS Snapshot Scheduler Lambda function for automatically take snapshot of EBS volumes.",
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ".zips"
                            ]
                        ]
                    },
                    "S3Key": "ebs-snapshot-scheduler.zip"
                },
                "Runtime": "python2.7",
                "Timeout": "300"
            }
        },
        "CreateParamDDB": {
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "SolutionName",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "SolutionName",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "ReadCapacityUnits"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "WriteCapacityUnits"
                    }
                },
                "TableName": {
                    "Ref": "PolicyDDBTableName"
                }
            },
            "Type": "AWS::DynamoDB::Table"
        },
        "CreateHistoryDDB": {
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "snapshot_id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "snapshot_id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "ReadCapacityUnits"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "WriteCapacityUnits"
                    }
                },
                "TableName": {
                    "Ref": "HistoryDDBTableName"
                }
            },
            "Type": "AWS::DynamoDB::Table"
        },
        "SolutionHelperRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Solution_Helper_Permissions",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:PutItem"
                                    ],
                                    "Resource": [
                                        "arn:aws:dynamodb:*:*:table/*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:AddPermission",
                                        "lambda:CreateFunction",
                                        "lambda:DeleteFunction",
                                        "lambda:GetFunction",
                                        "lambda:UpdateFunctionCode",
                                        "lambda:UpdateFunctionConfiguration",
                                        "s3:GetObject",
                                        "events:DeleteRule",
                                        "events:DisableRule",
                                        "events:EnableRule",
                                        "events:PutEvents",
                                        "events:PutRule",
                                        "events:PutTargets",
                                        "events:RemoveTargets",
                                        "events:ListTargetsByRule",
                                        "iam:PassRole"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SolutionHelper": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "solution-helper.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "SolutionHelperRole",
                        "Arn"
                    ]
                },
                "Description": "This function creates a CloudFormation custom lambda resource that writes parameters into DynamoDB table.",
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                "solutions-",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "library/solution-helper/v3/solution-helper.zip"
                },
                "Runtime": "python2.7",
                "Timeout": "120"
            }
        },
        "PutDdbData": {
            "Type": "Custom::PutDDBData",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "SolutionHelper",
                        "Arn"
                    ]
                },
                "StoreInDDB": {
                    "Fn::Join": [
                        "",
                        [
                            "{ 'TableName' : '",
                            {
                                "Ref": "CreateParamDDB"
                            },
                            "', ",
                            "'Item': {",
                            "'CustomTagName': {'S': '",
                            {
                                "Ref": "CustomTagName"
                            },
                            "'},",
                            "'SolutionName': {'S': 'EbsSnapshotScheduler'},",
                            "'DefaultSnapshotTime': {'S': '",
                            {
                                "Ref": "DefaultSnapshotTime"
                            },
                            "'},",
                            "'DefaultRetentionDays': {'S': '",
                            {
                                "Ref": "DefaultRetentionDays"
                            },
                            "'},",
                            "'DefaultTimeZone': {'S': '",
                            {
                                "Ref": "DefaultTimeZone"
                            },
                            "'},",
                            "'SendAnonymousData': {'S': '",
                            {
                                "Ref": "SendAnonymousData"
                            },
                            "'},",
                            "'AutoSnapshotDeletion': {'S': '",
                            {
                                "Ref": "AutoSnapshotDeletion"
                            },
                            "'},",
                            "'DefaultDaysActive': {'S': '",
                            {
                                "Ref": "DefaultDaysActive"
                            },
                            "'}",
                            "}",
                            "}"
                        ]
                    ]
                },
                "DependsOn": [
                    "CreateUniqueID",
                    "CreateParamDDB"
                ]
            }
        },
        "CreateUniqueID": {
            "Type": "Custom::CreateUUID",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "SolutionHelper",
                        "Arn"
                    ]
                },
                "Region": {
                    "Ref": "AWS::Region"
                },
                "CreateUniqueID": "true",
                "DependsOn": [
                    "SolutionHelper"
                ]
            }
        },
        "ScheduledRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Rule to trigger EC2Scheduler function on a schedule",
                "ScheduleExpression": "rate(5 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ebsSnapShotLambda",
                                "Arn"
                            ]
                        },
                        "Id": "TargetFunctionV1"
                    }
                ]
            }
        },
        "PermissionForEventsToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "ebsSnapShotLambda"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "ScheduledRule",
                        "Arn"
                    ]
                }
            }
        }
    },
    "Outputs": {
        "UUID": {
            "Description": "Newly created random UUID.",
            "Value": {
                "Fn::GetAtt": [
                    "CreateUniqueID",
                    "UUID"
                ]
            }
        },
        "PolicyDDBTableName": {
            "Description": "Policy DynamoDB Table Name",
            "Value": {
                "Ref": "PolicyDDBTableName"
            }
        },
        "HistoryDDBTableName": {
            "Description": "DynamoDB Table Name",
            "Value": {
                "Ref": "HistoryDDBTableName"
            }
        }
    }
}
